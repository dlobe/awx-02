---
- hosts: all
  gather_facts: false
  tasks:
       - name: slurp json
         slurp:
           src: /home/ansibleadm/test.json
         register: mydata
#       - name: set a fact
#         set_fact:
#              List_Of_Files: "{{ lookup('file', 'mydata') }}"
#              remote_src: true
       - name: view data 
         debug:
        #   msg: "{{ mydata | json_query('[*].dir') | dict2items }}"
           msg: "{{ mydata.content | b64decode }}"  
         register: output
        
       - name: check list items
         debug:
           msg: "{{ output | dict2items | list | map(attribute='src')}}"
         #loop:
          # - "{{ output | dict2items | []}}"
          # - "{{ mydata['content'] | b64decode  }}"
      

#       - name: create directory if it doesn't exist
#         file:
#           path: "{{ item }}"
#           state: directory
#           recurse: yes
#         with_items:
#           - "{{ mydata | json_query('[*].dir') }}"
#
#       - name: test with together
#         debug: msg="{{ item.0 }} and {{ item.1 }}" 
#         with_together: 
#           - "{{ mydata | json_query('[*].src') }}"
#           - "{{ mydata | json_query('[*].dir') }}"
#
##       - name: copy files to respective directory new
##         copy:
##           src: "{{ item.src }}"
##           dest: "{{ item.dir }}"
##           remote_src: true
##         with_items::
##            - "{{ mydata }}"
#
#       - name: copy files to respective directory
#         copy:
#           src: "{{ item.0 }}"
#           dest: "{{ item.1 }}"
#           remote_src: true
#         with_together:
#            - "{{ mydata | json_query('[*].src') }}"
#            - "{{ mydata | json_query('[*].dir') }}"  
#             
##         vars:
##           jmesquery: "[*].dir"
##           - "{{ mydata }}"
##         ignore_errors: true
###       - name: create dir
##         
##       - name: list operations
##         debug:
###           msg: "{{ mydata | json_query('[].operation') }}"
##           msg: "{{ item | last }}"
##         loop: "{{ mydata | to_json | from_json |list }}"
##                
###       - name: view data 
###         shell: |
###            "{{ item }}" | awk '/create/ {print}'
###         loop:
###           - "{{ mydata }}"
##        
##          
###       - name: list operations
###         debug:
###           msg: "{{ mydata | json_query('[].operation') }}"
###      
###       - name: extract canonical id
##         debug:
##           msg: "{{ mydata | json_query('aliases[].mount_accessor') }}"
